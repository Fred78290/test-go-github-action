name: test-go-github-action
on:
  push:
    tags:
      - v*
jobs:
  build:
    runs-on: github-runner
    env:
      REGISTRY: ${{ secrets.REGISTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache vendor
        uses: actions/cache@v2
        env:
          cache-name: cache-vendor
        with:
          path: vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Prepare
        id: prep
        run: |
          TAG=pr
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          echo ::set-output name=tag::${TAG}
          echo "Build with tag=${TAG}"
      - name:  Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16
      - name: Build binary
        shell: bash
        run:
          echo "Build with tag:${{ steps.prep.outputs.tag }}";
          make -e REGISTRY=$REGISTRY -e TAG="${{ steps.prep.outputs.tag }}" container;
          sudo chown -R $USER out vendor
      - name: Output
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2.2.3
        with:
          name: binaries
          path: out
          if-no-files-found: error
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: github-runner
    env:
      REGISTRY: ${{ secrets.REGISTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          TAG=pr
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          echo ::set-output name=tag::${TAG}
          echo "Build with tag=${TAG}"
        # echo ::set-env name=RELEASE_VERSION::${TAG}
      - name:  Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.16
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1.3.0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: out
      - name: Prepare docker buildx
        shell: bash
        run: |
          docker buildx version;
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin;
          docker buildx create --use
      - name: Build docker image
        shell: bash
        run: |
          echo "Build docker image tag:${{ steps.prep.outputs.tag }}";
          ls -l;
          make -e REGISTRY=$REGISTRY -e TAG="${{ steps.prep.outputs.tag }}" push-manifest
      - name: Package sources
        run:
          tar -v --exclude builder --exclude vendor --exclude test-go-github-action.tgz --exclude .github --exclude out --exclude .git --gzip --create --file=test-go-github-action.tgz .
      - name: Prepare Release
        shell: bash
        run: |
          cp out/linux/amd64/test-go-github-action test-go-github-action-amd64;
          cp out/linux/arm64/test-go-github-action test-go-github-action-arm64
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          files: |
            test-go-github-action-amd64
            test-go-github-action-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.      

      
      


